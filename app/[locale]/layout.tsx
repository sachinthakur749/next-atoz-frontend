import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { QueryClientProvider } from "@/context/QueryClientProvider";
import { EnvCssVariables } from "@/lib/EnvCssVariables";
import { getRequest } from "@/lib/apiServices";
import Footer from "@/components/sections/Footer";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getData() {
  const [locationsData, servicesData, fleetsData, siteInfo] = await Promise.all(
    [
      getRequest("content/template?type=area"),
      getRequest("content/template?type=service"),
      getRequest("content/template?type=fleet"),
      getRequest("content/site-info"),
    ]
  );

  return { locationsData, servicesData, fleetsData, siteInfo };
}


export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;



  const primaryColor = process.env.NEXT_PUBLIC_PRIMARY_COLOR || "#EC6408";

  const { locationsData, servicesData, fleetsData, siteInfo } = await getData();




  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  return (
    <html lang={locale}>
      <head>
        <style>{`:root { --primary-color: ${primaryColor}; }`}</style>
      </head>
      <body suppressHydrationWarning>
        <NextIntlClientProvider locale={locale}>
          <QueryClientProvider>{children}
            <Footer
              serviceLists={servicesData?.data}
              locationLists={locationsData?.data}
              fleetLists={fleetsData?.data}
              siteInfo={siteInfo?.data}
            />
          </QueryClientProvider>
        </NextIntlClientProvider>
        <EnvCssVariables />
      </body>
    </html>
  );
}
